{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\CategoryTransactions.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport '../Styles/Categories.css';\nimport { Form, Modal, Button, Alert } from \"react-bootstrap\";\nimport MasterContext from '../contexts/MasterContext';\nimport { Link, useNavigate } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryType = {\n  income: 'income',\n  expenditure: 'expenditure'\n};\nconst CategoryTransactions = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [kategorijaID, setKategorijaID] = useState();\n  const [Categoryname, setCategoryName] = useState('');\n  const [limit, setLimit] = useState('');\n  const [type, setType] = useState(true);\n  const [Transactionname, setTransactionName] = useState('');\n  const [value, setValue] = useState('');\n  const {\n    CategoryList,\n    setCategoryList,\n    addCategory,\n    IncomeList,\n    setIncomeList,\n    ExpenditureList,\n    setExpenditureList,\n    addExpenditure,\n    addIncome,\n    getSpecificPrihodi\n  } = useContext(MasterContext);\n  const [transactionType, setTransactionType] = useState('');\n  const navigate = useNavigate();\n  const UserID = sessionStorage.getItem('userID');\n  const incomeIndex = IncomeList.findIndex(income => income.id === transaction.id);\n  const expenditureIndex = ExpenditureList.findIndex(expenditure => expenditure.id === transaction.id);\n  const incomeShape = propTypes.shape({\n    id: propTypes.number.isRequired,\n    name: propTypes.string.isRequired,\n    amount: propTypes.number.isRequired,\n    date: propTypes.string.isRequired,\n    kategorijaid: propTypes.number.isRequired\n  });\n  const expenditureShape = propTypes.shape({\n    id: propTypes.number.isRequired,\n    name: propTypes.string.isRequired,\n    amount: propTypes.number.isRequired,\n    date: propTypes.string.isRequired,\n    kategorijaid: propTypes.number.isRequired\n  });\n  CategoryTransactions.propTypes = {\n    Category: propTypes.shape({\n      name: propTypes.string.isRequired,\n      userid: UserID,\n      limita: propTypes.number.isRequired,\n      tip: propTypes.bool.isRequired,\n      transactions: propTypes.arrayOf(propTypes.oneOfType([incomeShape, expenditureShape])).isRequired\n    }),\n    Income: incomeShape,\n    Expenditure: expenditureShape\n  };\n  useEffect(() => {\n    console.log(\"Kategorija ID in TransactionType\", kategorijaID);\n  }, [kategorijaID]);\n  function handleClick(id, Type) {\n    console.log(\"My Name Jeff\" + id, type);\n    setTransactionType(Type);\n    setKategorijaID(id);\n    setShowTransactionModal(true);\n    console.log(\"Catch22\" + transactionType, kategorijaID);\n  }\n\n  /*const IncomesByCategory = IncomeList.reduce((acc, Income) => {\r\n      if (!acc[Income.kategorijaid]) {\r\n          acc[Income.kategorijaid] = [];\r\n      }\r\n      acc[Income.kategorijaid].push(Income);\r\n        return acc;\r\n      \r\n  }, {});*/\n\n  function handleRender(id, Type) {\n    console.log(\"Handlerender\" + id, Type);\n    const updatedCategoryList = [...CategoryList];\n    const category = updatedCategoryList.find(cat => cat.id === id);\n    if (category) {\n      if (Type === true) {\n        IncomeList.forEach(Income => {\n          if (Income.kategorijaid === id) {\n            console.log(category.transaction);\n            if (!category.transactions) {\n              category.transactions = [];\n            }\n            category.transactions.push(Income);\n          }\n        });\n      } else if (Type === false) {\n        ExpenditureList.forEach(Expenditure => {\n          if (Expenditure.kategorijaid === id) {\n            if (!category.transactions) {\n              category.transactions = [];\n            }\n            category.transactions.push(Expenditure);\n          }\n        });\n      }\n      setCategoryList(updatedCategoryList);\n    }\n  }\n  CategoryList.map(category => {\n    console.log(\"Transactions for category\", category.id, \":\", category.transactions);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-category-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn1\",\n      onClick: () => setShowCategoryModal(true),\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: showCategoryModal,\n        onHide: () => setShowCategoryModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Category Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter category name\",\n                value: Categoryname,\n                onChange: e => setCategoryName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Limit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Enter limit\",\n                value: limit,\n                onChange: e => setLimit(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: type,\n                onChange: e => setType(e.target.value === 'true'),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: true,\n                  children: \"Income\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: false,\n                  children: \"Expenditure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setShowCategoryModal(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => {\n              addCategory(Categoryname, limit, type);\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: showTransactionModal,\n        onHide: () => setShowTransactionModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Add Transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Transaction Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter transaction name\",\n                value: Transactionname,\n                onChange: e => setTransactionName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Enter value\",\n                value: value,\n                onChange: e => setValue(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"btn2\",\n            onClick: () => setShowTransactionModal(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            variant: \"btn1\",\n            onClick: () => {\n              addIncome(Transactionname, kategorijaID, value);\n            },\n            children: \"Add Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), CategoryList && Array.isArray(CategoryList) && CategoryList.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Category Name: \", category.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Limit: \", category.limita, \" EUR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Type: \", category.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), category.transactions && Array.isArray(category.transactions) ? category.transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Name: \", transaction.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Name: \", transaction.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Value: \", transaction.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Date: \", transaction.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }, this)]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions for this category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn1\",\n        onClick: () => {\n          handleClick(category.id, category.Type);\n        },\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, category.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryTransactions, \"E8Ns06UhRcB+LsFzXsYYpHIl5t8=\", false, function () {\n  return [useNavigate];\n});\n_c = CategoryTransactions;\nexport default CategoryTransactions;\nvar _c;\n$RefreshReg$(_c, \"CategoryTransactions\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Form","Modal","Button","Alert","MasterContext","Link","useNavigate","propTypes","jsxDEV","_jsxDEV","CategoryType","income","expenditure","CategoryTransactions","_ref","_s","userId","showCategoryModal","setShowCategoryModal","showTransactionModal","setShowTransactionModal","kategorijaID","setKategorijaID","Categoryname","setCategoryName","limit","setLimit","type","setType","Transactionname","setTransactionName","value","setValue","CategoryList","setCategoryList","addCategory","IncomeList","setIncomeList","ExpenditureList","setExpenditureList","addExpenditure","addIncome","getSpecificPrihodi","transactionType","setTransactionType","navigate","UserID","sessionStorage","getItem","incomeIndex","findIndex","id","transaction","expenditureIndex","incomeShape","shape","number","isRequired","name","string","amount","date","kategorijaid","expenditureShape","Category","userid","limita","tip","bool","transactions","arrayOf","oneOfType","Income","Expenditure","console","log","handleClick","Type","handleRender","updatedCategoryList","category","find","cat","forEach","push","map","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","Header","closeButton","Title","Body","Group","Label","Control","placeholder","onChange","e","target","as","Footer","variant","Array","isArray","_c","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/CategoryTransactions.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport '../Styles/Categories.css';\r\nimport { Form, Modal, Button, Alert } from \"react-bootstrap\"\r\nimport MasterContext from '../contexts/MasterContext';\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport propTypes from 'prop-types';\r\n\r\nconst CategoryType = {\r\n    income: 'income',\r\n    expenditure: 'expenditure'\r\n}\r\n\r\n\r\n\r\n\r\nconst CategoryTransactions = ({ userId }) => {\r\n    const [showCategoryModal, setShowCategoryModal] = useState(false);\r\n    const [showTransactionModal, setShowTransactionModal] = useState(false);\r\n    const [kategorijaID, setKategorijaID] = useState();\r\n    const [Categoryname, setCategoryName] = useState('');\r\n    const [limit, setLimit] = useState('');\r\n    const [type, setType] = useState(true);\r\n    const [Transactionname, setTransactionName] = useState('');\r\n    const [value, setValue] = useState('');\r\n    const { CategoryList, setCategoryList, addCategory, IncomeList, setIncomeList, ExpenditureList, setExpenditureList, addExpenditure, addIncome, getSpecificPrihodi } = useContext(MasterContext);\r\n    const [transactionType, setTransactionType] = useState('')\r\n    const navigate = useNavigate();\r\n    const UserID = sessionStorage.getItem('userID')\r\n    const incomeIndex = IncomeList.findIndex(income => income.id === transaction.id);\r\n    const expenditureIndex = ExpenditureList.findIndex(expenditure => expenditure.id === transaction.id);\r\n    const incomeShape = propTypes.shape({\r\n        id: propTypes.number.isRequired,\r\n        name: propTypes.string.isRequired,\r\n        amount: propTypes.number.isRequired, \r\n        date: propTypes.string.isRequired,\r\n        kategorijaid: propTypes.number.isRequired\r\n    });\r\n    \r\n    const expenditureShape = propTypes.shape({\r\n        id: propTypes.number.isRequired,\r\n        name: propTypes.string.isRequired,\r\n        amount: propTypes.number.isRequired, \r\n        date: propTypes.string.isRequired,\r\n        kategorijaid: propTypes.number.isRequired\r\n    });\r\n    \r\n    CategoryTransactions.propTypes = {\r\n        Category: propTypes.shape({\r\n            name: propTypes.string.isRequired,\r\n            userid: UserID,\r\n            limita: propTypes.number.isRequired,\r\n            tip: propTypes.bool.isRequired,\r\n            transactions: propTypes.arrayOf(\r\n                propTypes.oneOfType([incomeShape, expenditureShape])\r\n            ).isRequired\r\n        }),\r\n        Income: incomeShape,\r\n        Expenditure: expenditureShape\r\n    };\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"Kategorija ID in TransactionType\", kategorijaID);\r\n    }, [kategorijaID]);\r\n\r\n    function handleClick (id, Type) {\r\n        console.log(\"My Name Jeff\" + id, type)\r\n        setTransactionType(Type)\r\n        setKategorijaID(id)\r\n        setShowTransactionModal(true)\r\n        console.log(\"Catch22\" + transactionType, kategorijaID)\r\n    }\r\n\r\n    /*const IncomesByCategory = IncomeList.reduce((acc, Income) => {\r\n        if (!acc[Income.kategorijaid]) {\r\n            acc[Income.kategorijaid] = [];\r\n        }\r\n        acc[Income.kategorijaid].push(Income);\r\n\r\n        return acc;\r\n        \r\n    }, {});*/\r\n\r\n    \r\n\r\n    function handleRender(id, Type) {\r\n        console.log(\"Handlerender\" + id, Type);\r\n    \r\n    \r\n        const updatedCategoryList = [...CategoryList];\r\n    \r\n\r\n        const category = updatedCategoryList.find(cat => cat.id === id);\r\n    \r\n        if (category) {\r\n            if (Type === true) {\r\n        \r\n                IncomeList.forEach(Income => {\r\n                    if (Income.kategorijaid === id) {\r\n                        console.log(category.transaction)\r\n                        if (!category.transactions) {\r\n                            category.transactions = [];\r\n                        }\r\n                        category.transactions.push(Income);\r\n                    }\r\n                });\r\n            } else if (Type === false) {\r\n                ExpenditureList.forEach(Expenditure => {\r\n                    if (Expenditure.kategorijaid === id) {\r\n                        if (!category.transactions) {\r\n                            category.transactions = [];\r\n                        }\r\n                        category.transactions.push(Expenditure);\r\n                    }\r\n                });\r\n            }\r\n            setCategoryList(updatedCategoryList);\r\n        }\r\n    }\r\n    CategoryList.map(category => {\r\n        console.log(\"Transactions for category\", category.id, \":\", category.transactions);\r\n    });\r\n   \r\n\r\n  return (\r\n    <div className=\"add-category-container\">\r\n      <button className='btn1' onClick={() => setShowCategoryModal(true)}>Add Category</button>\r\n        <div className=\"modal\">\r\n            <Modal show={showCategoryModal} onHide={() =>setShowCategoryModal(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Category</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Category Name</Form.Label>\r\n                        <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Enter category name\" \r\n                        value={Categoryname} \r\n                        onChange={(e) => setCategoryName(e.target.value)} \r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Limit</Form.Label>\r\n                        <Form.Control \r\n                        type=\"number\" \r\n                        placeholder=\"Enter limit\" \r\n                        value={limit} \r\n                        onChange={(e) => setLimit(e.target.value)} \r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Type</Form.Label>\r\n                        <Form.Control \r\n                        as=\"select\" \r\n                        value={type} \r\n                        onChange={(e) => setType(e.target.value === 'true')}\r\n                        >\r\n                        <option value={true}>Income</option>\r\n                        <option value={false}>Expenditure</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() =>setShowCategoryModal(false)}>\r\n                    Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n\r\n                      addCategory(Categoryname, limit, type);\r\n                     }}>\r\n                    Add\r\n                    </Button>\r\n                </Modal.Footer>\r\n                </Modal>\r\n        </div>\r\n        <div className=\"modal\">\r\n        <Modal show={showTransactionModal} onHide={()=>setShowTransactionModal(false)}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add Transaction</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Transaction Name</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter transaction name\" \r\n                    value={Transactionname} \r\n                    onChange={(e) => setTransactionName(e.target.value)} \r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Value</Form.Label>\r\n                    <Form.Control \r\n                    type=\"number\" \r\n                    placeholder=\"Enter value\" \r\n                    value={value} \r\n                    onChange={(e) => setValue(e.target.value)} \r\n                    />\r\n                </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"btn2\" onClick={() =>setShowTransactionModal(false)}>\r\n                Close\r\n                </Button>\r\n                {\r\n                <button \r\n                    variant=\"btn1\" \r\n                    onClick={() => {\r\n                        addIncome(Transactionname, kategorijaID, value)\r\n                        }}>\r\n                                Add Income\r\n                  </button>}\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n        {(CategoryList && Array.isArray(CategoryList)) && CategoryList.map(category => (\r\n            <div key={category.id} className=\"category-box\">\r\n                <h3>Category Name: {category.name}</h3>\r\n                <h3>Limit: {category.limita} EUR</h3>\r\n                <h3>Type: {category.type}</h3>\r\n                <h4>Transactions</h4>\r\n                {(category.transactions && Array.isArray(category.transactions)) ? (\r\n                    category.transactions.map(transaction => (\r\n                        <ul key={transaction.id}>\r\n                            <li>Name: {transaction.id}</li>\r\n                            <li>Name: {transaction.name}</li>\r\n                            <li>Value: {transaction.value}</li>\r\n                            <li>Date: {transaction.date}</li>\r\n                        </ul>\r\n                    ))\r\n                ) : (\r\n                    <p>No transactions for this category.</p>\r\n                )}\r\n        <button className='btn1' onClick={() => {\r\n            handleClick(category.id, category.Type);\r\n        }}>\r\n            Add Transaction\r\n        </button>\r\n    </div>\r\n))}\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryTransactions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}