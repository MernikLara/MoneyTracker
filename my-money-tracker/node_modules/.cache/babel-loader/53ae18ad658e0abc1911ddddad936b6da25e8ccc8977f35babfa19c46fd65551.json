{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\TransactionsProvider.js\",\n  _s = $RefreshSig$();\nimport TransactionsContext from '../contexts/TransactionsContext';\nimport React, { useState, useEffect, useContext, useCallback } from \"react\";\nimport { LoginContext } from './LoginProvider';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionsProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [IncomeList, setIncomeList] = useState([]);\n  const [ExpenditureList, setExpenditureList] = useState([]);\n  const [Error, setError] = useState(null);\n  const UserID = parseInt(sessionStorage.getItem(\"userID\"));\n  const [IncomeID, setIncomeID] = useState();\n  const formattedDate = moment().format('YYYY-MM-DD');\n  useEffect(() => {\n    const getIncomes = async () => {\n      try {\n        const res = await fetch(`http://localhost:8080/api/v1/prihod/userid/${UserID}`);\n        if (!res.ok) {\n          throw new Error('could not fetch data');\n        }\n        const data = await res.json();\n        console.log(data);\n        setIncomeList(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getIncomes();\n  }, [UserID]);\n  useEffect(() => {\n    const getExpenditures = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/api/v1/odhod/userid/${UserID}`);\n        if (!response.ok) {\n          throw new Error('could not fetch data');\n        }\n        const data = await response.json();\n        console.log(data);\n        setExpenditureList(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getExpenditures();\n  }, [UserID]);\n  const addIncome = useCallback(async (name, kategorijaid, value) => {\n    console.log(\"function called\");\n    const Income = {\n      date: formattedDate,\n      kategorijaidprihod: kategorijaid,\n      name: name,\n      useridprihod: UserID,\n      value: value\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/prihod', Income, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response.data);\n      if (response.status === 200) {\n        console.log('Income added Successfully');\n        const newIncomeID = response.data.id;\n        console.log(parseInt(response.data.id));\n        const res = await axios.post(`/addprihod/${Income.kategorijaid}/${Income.useridprihod}`, {\n          kategorijaid,\n          id: newIncomeID\n        });\n        console.log(res.data);\n        if (res.status === 200) {\n          console.log('Income added successfully to category');\n        }\n      }\n    } catch (err) {\n      console.error('Error adding Income', err);\n    }\n  }, [UserID]);\n  const addExpenditure = useCallback(async (name, kategorijaid, value) => {\n    const Expenditure = {\n      name: name,\n      kategorijaidodhod: kategorijaid,\n      date: formattedDate,\n      useridodhod: UserID,\n      value: value\n    };\n    console.log(Expenditure.kategorijaidodhod);\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/odhod', Expenditure);\n      console.log(response.data);\n      if (response.status === 200) {\n        console.log('Expenditure added Successfully');\n        const newExpenditureID = response.data.id;\n        const res = await axios.post(`/addprihod/${Expenditure.kategorijaidodhod}/${Expenditure.useridodhod}`, {\n          kategorijaid,\n          id: newExpenditureID\n        });\n        console.log(res.data);\n        if (res.status === 200) {\n          console.log('Expenditure added successfully to category');\n        }\n      }\n    } catch (err) {\n      console.error('Error adding Expenditure', err);\n    }\n  }, [UserID]);\n  const updateIList = newTList => {\n    setIncomeList(newTList);\n  };\n  const updateEList = newEList => {\n    setExpenditureList(newEList);\n  };\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      IncomeList,\n      ExpenditureList,\n      addIncome,\n      addExpenditure,\n      updateEList,\n      updateIList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionsProvider, \"9JolAdOUT8HoRBnRvYOLO8GKRRo=\");\n_c = TransactionsProvider;\nexport default TransactionsProvider;\nvar _c;\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"names":["TransactionsContext","React","useState","useEffect","useContext","useCallback","LoginContext","axios","moment","jsxDEV","_jsxDEV","TransactionsProvider","_ref","_s","children","IncomeList","setIncomeList","ExpenditureList","setExpenditureList","Error","setError","UserID","parseInt","sessionStorage","getItem","IncomeID","setIncomeID","formattedDate","format","getIncomes","res","fetch","ok","data","json","console","log","error","message","getExpenditures","response","addIncome","name","kategorijaid","value","Income","date","kategorijaidprihod","useridprihod","post","headers","status","newIncomeID","id","err","addExpenditure","Expenditure","kategorijaidodhod","useridodhod","newExpenditureID","updateIList","newTList","updateEList","newEList","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/TransactionsProvider.js"],"sourcesContent":["import TransactionsContext from '../contexts/TransactionsContext'\r\nimport React, { useState, useEffect, useContext, useCallback } from \"react\"\r\nimport { LoginContext } from './LoginProvider';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nfunction TransactionsProvider({ children }) {\r\n    const [IncomeList, setIncomeList] = useState([]);\r\n    const [ExpenditureList, setExpenditureList] =  useState([]);\r\n    const [Error, setError] = useState(null)\r\n    const UserID = parseInt(sessionStorage.getItem(\"userID\"))\r\n    const [IncomeID, setIncomeID] = useState()\r\n    const formattedDate = moment().format('YYYY-MM-DD');\r\n\r\n    useEffect(() => {\r\n        const getIncomes = async () => {\r\n            try {\r\n                const res = await fetch(`http://localhost:8080/api/v1/prihod/userid/${UserID}`)\r\n                if (!res.ok) {\r\n                    throw new Error('could not fetch data')\r\n                }\r\n                const data = await res.json();\r\n                console.log(data)\r\n                setIncomeList(data)\r\n            } catch (error) {\r\n                setError(error.message);\r\n            }\r\n        };\r\n        getIncomes();\r\n        }, [UserID])\r\n    useEffect(() => {\r\n        const getExpenditures = async () =>{\r\n            \ttry{\r\n                    const response = await fetch(`http://localhost:8080/api/v1/odhod/userid/${UserID}`)\r\n                    if (!response.ok) {\r\n                        throw new Error('could not fetch data')\r\n                    }\r\n                    const data = await response.json();\r\n                    console.log(data)\r\n                    setExpenditureList(data)\r\n\r\n                } catch (error) {\r\n                    setError(error.message);\r\n                }\r\n            };\r\n            getExpenditures();\r\n        }, [UserID])\r\n        const addIncome = useCallback(async (name, kategorijaid, value) => {\r\n            console.log(\"function called\")\r\n            const Income = {\r\n                date: formattedDate,\r\n                kategorijaidprihod: kategorijaid,\r\n                name: name,\r\n                useridprihod: UserID,\r\n                value: value,\r\n            };\r\n        \r\n            try {\r\n                const response = await axios.post('http://localhost:8080/api/v1/prihod', Income ,{  headers: {\r\n                    'Content-Type': 'application/json'\r\n                }});\r\n                console.log(response.data);\r\n        \r\n                if (response.status === 200) {\r\n                    console.log('Income added Successfully');\r\n                    const newIncomeID = response.data.id;\r\n                    console.log(parseInt(response.data.id))\r\n                    const res = await axios.post(`/addprihod/${Income.kategorijaid}/${Income.useridprihod}`, { kategorijaid, id: newIncomeID });\r\n                    \r\n                    console.log(res.data);\r\n                    \r\n                    if (res.status === 200) {\r\n                        console.log('Income added successfully to category');\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                console.error('Error adding Income', err);\r\n            }\r\n        }, [UserID]);\r\n            const addExpenditure = useCallback(async( name, kategorijaid, value) =>{\r\n                const Expenditure = {\r\n                    name: name,\r\n                    kategorijaidodhod: kategorijaid,\r\n                    date: formattedDate,\r\n                    useridodhod: UserID,\r\n                    value: value,\r\n                }\r\n                console.log(Expenditure.kategorijaidodhod)\r\n                try {\r\n                    const response = await axios.post('http://localhost:8080/api/v1/odhod', Expenditure);\r\n                    console.log(response.data);\r\n            \r\n                    if (response.status === 200) {\r\n                        console.log('Expenditure added Successfully');\r\n                        const newExpenditureID = response.data.id\r\n                        const res = await axios.post(`/addprihod/${Expenditure.kategorijaidodhod}/${Expenditure.useridodhod}`, { kategorijaid, id: newExpenditureID });\r\n                        \r\n                        console.log(res.data);\r\n                        \r\n                        if (res.status === 200) {\r\n                            console.log('Expenditure added successfully to category');\r\n                        }\r\n                    }\r\n                } catch (err) {\r\n                    console.error('Error adding Expenditure', err);\r\n                }\r\n            }, [UserID]);\r\n\r\n\r\n\r\n    const updateIList = (newTList) => {\r\n        setIncomeList(newTList);\r\n    };\r\n    const updateEList = (newEList) => {\r\n        setExpenditureList(newEList)\r\n    }\r\n    return (\r\n        <TransactionsContext.Provider value={{IncomeList, ExpenditureList, addIncome, addExpenditure, updateEList, updateIList }}>\r\n            {children}\r\n        </TransactionsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TransactionsProvider\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}