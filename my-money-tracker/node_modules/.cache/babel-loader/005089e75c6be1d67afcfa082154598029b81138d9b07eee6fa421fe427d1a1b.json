{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\IncomeProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState, useCallback } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport IncomeContext from \"../contexts/IncomeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IncomeProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [IncomeList, setIncomeList] = useState([]);\n  const [Error, setError] = useState(null);\n  const UserID = parseInt(sessionStorage.getItem(\"userID\"));\n  const [IncomeID, setIncomeID] = useState();\n  console.log(UserID);\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n  const addIncome = useCallback(async _ref2 => {\n    let {\n      name,\n      kategorijaid,\n      value\n    } = _ref2;\n    console.log(\"function called\");\n    const Income = {\n      name: name,\n      kategorijaidprihod: kategorijaid,\n      useridprihod: UserID,\n      date: newDate,\n      value: value,\n      userid: UserID\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/prihod', Income);\n      console.log(response.data);\n      if (response.status === 200) {\n        console.log('Income added Successfully');\n        console.log(response.data);\n        /*const newIncomeID = response.data.id;\r\n        const res = await axios.post(`/addprihod/${kategorijaid}/${newIncomeID}`, { kategorijaid, id: newIncomeID });\r\n        \r\n        console.log(res.data);\r\n        \r\n        if (res.status === 200) {\r\n            console.log('Income added successfully to category');\r\n        }*/\n      }\n    } catch (err) {\n      console.error('Error adding Income', err);\n    }\n  }, [UserID]);\n  return /*#__PURE__*/_jsxDEV(IncomeContext.Provider, {\n    value: {\n      addIncome,\n      IncomeList,\n      IncomeID\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(IncomeProvider, \"V5/lG7XADz6YXYbMQLiS/fHztgQ=\");\n_c = IncomeProvider;\n;\nexport default IncomeProvider;\nvar _c;\n$RefreshReg$(_c, \"IncomeProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useCallback","axios","useNavigate","IncomeContext","jsxDEV","_jsxDEV","IncomeProvider","_ref","_s","children","IncomeList","setIncomeList","Error","setError","UserID","parseInt","sessionStorage","getItem","IncomeID","setIncomeID","console","log","newDate","Date","date","getDate","month","getMonth","year","getFullYear","addIncome","_ref2","name","kategorijaid","value","Income","kategorijaidprihod","useridprihod","userid","response","post","data","status","err","error","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/IncomeProvider.js"],"sourcesContent":["import React, { createContext, useEffect, useState, useCallback } from \"react\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport IncomeContext from \"../contexts/IncomeContext\";\r\n\r\nfunction IncomeProvider({ children }) {\r\n    const [IncomeList, setIncomeList] = useState([]);\r\n    const [Error, setError] = useState(null)\r\n    const UserID = parseInt(sessionStorage.getItem(\"userID\"))\r\n    const [IncomeID, setIncomeID] = useState()\r\n    console.log(UserID)\r\n    let newDate = new Date()\r\n    let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n\r\n    const addIncome = useCallback(async ({name, kategorijaid, value}) => {\r\n        console.log(\"function called\")\r\n        const Income = {\r\n            name: name,\r\n            kategorijaidprihod: kategorijaid,\r\n            useridprihod: UserID,\r\n            date: newDate,\r\n            value: value,\r\n            userid: UserID\r\n        };\r\n    \r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/v1/prihod', Income);\r\n            console.log(response.data);\r\n    \r\n            if (response.status === 200) {\r\n                console.log('Income added Successfully');\r\n                console.log(response.data)\r\n                /*const newIncomeID = response.data.id;\r\n                const res = await axios.post(`/addprihod/${kategorijaid}/${newIncomeID}`, { kategorijaid, id: newIncomeID });\r\n                \r\n                console.log(res.data);\r\n                \r\n                if (res.status === 200) {\r\n                    console.log('Income added successfully to category');\r\n                }*/\r\n            }\r\n        } catch (err) {\r\n            console.error('Error adding Income', err);\r\n        }\r\n    }, [UserID]);\r\n\r\n\r\n    return (\r\n        <IncomeContext.Provider value={{ addIncome, IncomeList, IncomeID }}>\r\n          {children}\r\n        </IncomeContext.Provider>\r\n      );\r\n    };\r\n    \r\n    export default IncomeProvider\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC9E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,cAAcA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMe,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,CAAC;EAC1CqB,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;EACnB,IAAIQ,OAAO,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,IAAIC,IAAI,GAAGF,OAAO,CAACG,OAAO,CAAC,CAAC;EAC5B,IAAIC,KAAK,GAAGJ,OAAO,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC;EAClC,IAAIC,IAAI,GAAGN,OAAO,CAACO,WAAW,CAAC,CAAC;EAEhC,MAAMC,SAAS,GAAG9B,WAAW,CAAC,MAAA+B,KAAA,IAAuC;IAAA,IAAhC;MAACC,IAAI;MAAEC,YAAY;MAAEC;IAAK,CAAC,GAAAH,KAAA;IAC5DX,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,MAAMc,MAAM,GAAG;MACXH,IAAI,EAAEA,IAAI;MACVI,kBAAkB,EAAEH,YAAY;MAChCI,YAAY,EAAEvB,MAAM;MACpBU,IAAI,EAAEF,OAAO;MACbY,KAAK,EAAEA,KAAK;MACZI,MAAM,EAAExB;IACZ,CAAC;IAED,IAAI;MACA,MAAMyB,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,IAAI,CAAC,qCAAqC,EAAEL,MAAM,CAAC;MAChFf,OAAO,CAACC,GAAG,CAACkB,QAAQ,CAACE,IAAI,CAAC;MAE1B,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QACzBtB,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxCD,OAAO,CAACC,GAAG,CAACkB,QAAQ,CAACE,IAAI,CAAC;QAC1B;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;MACY;IACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVvB,OAAO,CAACwB,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;IAC7C;EACJ,CAAC,EAAE,CAAC7B,MAAM,CAAC,CAAC;EAGZ,oBACIT,OAAA,CAACF,aAAa,CAAC0C,QAAQ;IAACX,KAAK,EAAE;MAAEJ,SAAS;MAAEpB,UAAU;MAAEQ;IAAS,CAAE;IAAAT,QAAA,EAChEA;EAAQ;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B;AAACzC,EAAA,CAjDIF,cAAc;AAAA4C,EAAA,GAAd5C,cAAc;AAiDlB;AAED,eAAeA,cAAc;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}