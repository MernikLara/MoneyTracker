{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\LoginProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState, useCallback } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/createContext();\nconst LoginProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [name, setUsername] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userID, setUserID] = useState();\n  const [email, setEmail] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const authenticateUser = useCallback(async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/user/login', {\n        email,\n        password\n      });\n      if (response.status === 200) {\n        if (response.data.id === undefined) {\n          console.log(\"error with getting session ID\");\n        }\n        setUserID(parseInt(response.data.id));\n        setEmail(email);\n        setUsername(response.data.name);\n        setSurname(response.data.surname);\n        setPassword(password);\n        setIsLoggedIn(true);\n        console.log(userID);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [userID]);\n  const registerUser = useCallback(async (name, surname, password, email) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/user/register', {\n        name,\n        password,\n        email\n      });\n      if (response.status === 200) {\n        setUsername(name);\n        setSurname(surname);\n        setPassword(password);\n        setEmail(email);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      name,\n      email,\n      surname,\n      userID,\n      authenticateUser,\n      registerUser,\n      isLoggedIn,\n      setIsLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginProvider, \"/6WesrtZYBLZ5h99AuuFRa8lKzE=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginProvider;\nexport { LoginProvider, LoginContext };\nvar _c;\n$RefreshReg$(_c, \"LoginProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useCallback","axios","useNavigate","jsxDEV","_jsxDEV","LoginContext","LoginProvider","_ref","_s","children","name","setUsername","surname","setSurname","password","setPassword","userID","setUserID","email","setEmail","isLoggedIn","setIsLoggedIn","navigate","authenticateUser","response","post","status","data","id","undefined","console","log","parseInt","error","registerUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/LoginProvider.js"],"sourcesContent":["import React, { createContext, useEffect, useState, useCallback } from \"react\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst LoginContext = createContext();\r\n\r\nconst LoginProvider = ({ children }) => {\r\n  const [name, setUsername] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userID, setUserID] = useState();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  \r\n  const authenticateUser = useCallback(async (email, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/v1/user/login', {email, password});\r\n      if (response.status === 200) {\r\n        if(response.data.id === undefined){\r\n            console.log(\"error with getting session ID\")\r\n        }\r\n        setUserID(parseInt(response.data.id));\r\n        setEmail(email);\r\n        setUsername(response.data.name);\r\n        setSurname(response.data.surname)\r\n        setPassword(password);\r\n        setIsLoggedIn(true)\r\n        console.log(userID)\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [userID])\r\n  const registerUser = useCallback(async (name, surname, password, email) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/v1/user/register', { name, password, email });\r\n      if (response.status === 200) {\r\n        setUsername(name);\r\n        setSurname(surname)\r\n        setPassword(password);\r\n        setEmail(email);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <LoginContext.Provider value={{ name, email, surname, userID,  authenticateUser, registerUser, isLoggedIn, setIsLoggedIn }}>\r\n      {children}\r\n    </LoginContext.Provider>\r\n  );\r\n};\r\n\r\nexport { LoginProvider, LoginContext };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}