{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\TransactionsProvider.js\",\n  _s = $RefreshSig$();\nimport TransactionsContext from '../contexts/TransactionsContext';\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { LoginContext } from './LoginProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionsProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [TransactionList, setTransactionList] = useState([]);\n  const [ExpenditureList, setExpenditureList] = useState([]);\n  const [Error, setError] = useState(null);\n  const {\n    UserID\n  } = useContext(LoginContext);\n  useEffect(() => {\n    const getIncomes = async () => {\n      try {\n        const res = await fetch(`http://localhost:8080/api/v1/prihod/getbyuserid/${UserID}`);\n        if (!res.ok) {\n          throw new Error('could not fetch data');\n        }\n        const data = await res.json();\n        setTransactionList(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getIncomes();\n  }, []);\n  const updateTList = newTList => {\n    setTransactionList(newTList);\n  };\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      TransactionList,\n      updateTList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionsProvider, \"Tqaq9vH+MPN2nH7DT+SSfJE3Fno=\");\n_c = TransactionsProvider;\nexport default TransactionsProvider;\nvar _c;\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"names":["TransactionsContext","React","useState","useEffect","useContext","LoginContext","jsxDEV","_jsxDEV","TransactionsProvider","_ref","_s","children","TransactionList","setTransactionList","ExpenditureList","setExpenditureList","Error","setError","UserID","getIncomes","res","fetch","ok","data","json","error","message","updateTList","newTList","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/TransactionsProvider.js"],"sourcesContent":["import TransactionsContext from '../contexts/TransactionsContext'\r\nimport React, { useState, useEffect, useContext } from \"react\"\r\nimport { LoginContext } from './LoginProvider';\r\n\r\nfunction TransactionsProvider({ children }) {\r\n    const [TransactionList, setTransactionList] = useState([]);\r\n    const [ExpenditureList, setExpenditureList] =  useState([]);\r\n    const [Error, setError] = useState(null)\r\n    const { UserID } = useContext(LoginContext)\r\n\r\n    useEffect(() => {\r\n        const getIncomes = async () => {\r\n            try {\r\n                const res = await fetch(`http://localhost:8080/api/v1/prihod/getbyuserid/${UserID}`)\r\n                if (!res.ok) {\r\n                    throw new Error('could not fetch data')\r\n                }\r\n                const data = await res.json();\r\n                setTransactionList(data)\r\n            } catch (error) {\r\n                setError(error.message);\r\n            }\r\n        };\r\n        getIncomes();\r\n        }, [])\r\n    \r\n\r\n    const updateTList = (newTList) => {\r\n        setTransactionList(newTList);\r\n    };\r\n    return (\r\n        <TransactionsContext.Provider value={{TransactionList, updateTList }}>\r\n            {children}\r\n        </TransactionsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TransactionsProvider\r\n"],"mappings":";;AAAA,OAAOA,mBAAmB,MAAM,iCAAiC;AACjE,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,oBAAoBA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACtC,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAIb,QAAQ,CAAC,EAAE,CAAC;EAC3D,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEgB;EAAO,CAAC,GAAGd,UAAU,CAACC,YAAY,CAAC;EAE3CF,SAAS,CAAC,MAAM;IACZ,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,mDAAkDH,MAAO,EAAC,CAAC;QACpF,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE;UACT,MAAM,IAAIN,KAAK,CAAC,sBAAsB,CAAC;QAC3C;QACA,MAAMO,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BX,kBAAkB,CAACU,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZR,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAAC;MAC3B;IACJ,CAAC;IACDP,UAAU,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAGV,MAAMQ,WAAW,GAAIC,QAAQ,IAAK;IAC9Bf,kBAAkB,CAACe,QAAQ,CAAC;EAChC,CAAC;EACD,oBACIrB,OAAA,CAACP,mBAAmB,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAClB,eAAe;MAAEe;IAAY,CAAE;IAAAhB,QAAA,EAChEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEvC;AAACxB,EAAA,CA/BQF,oBAAoB;AAAA2B,EAAA,GAApB3B,oBAAoB;AAiC7B,eAAeA,oBAAoB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}