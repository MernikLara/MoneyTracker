{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\TransactionsProvider.js\",\n  _s = $RefreshSig$();\nimport TransactionsContext from '../contexts/TransactionsContext';\nimport React, { useState, useEffect, useContext, useCallback } from \"react\";\nimport { LoginContext } from './LoginProvider';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionsProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [IncomeList, setIncomeList] = useState([]);\n  const [ExpenditureList, setExpenditureList] = useState([]);\n  const [Error, setError] = useState(null);\n  const UserID = parseInt(sessionStorage.getItem(\"userID\"));\n  const [IncomeID, setIncomeID] = useState();\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n  useEffect(() => {\n    const getIncomes = async () => {\n      try {\n        const res = await fetch(`http://localhost:8080/api/v1/prihod/userid/${UserID}`);\n        if (!res.ok) {\n          throw new Error('could not fetch data');\n        }\n        const data = await res.json();\n        console.log(data);\n        setIncomeList(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getIncomes();\n  }, [UserID]);\n  useEffect(() => {\n    const getExpenditures = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/api/v1/odhod/userid/${UserID}`);\n        if (!response.ok) {\n          throw new Error('could not fetch data');\n        }\n        const data = await response.json();\n        console.log(data);\n        setExpenditureList(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getExpenditures();\n  }, [UserID]);\n  const addIncome = useCallback(async (name, kategorijaid, value) => {\n    console.log(\"function called\");\n    const Income = {\n      date: newDate,\n      kategorijaidprihod: kategorijaid,\n      name: name,\n      useridprihod: UserID,\n      value: value\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/prihod', Income);\n      console.log(response.data);\n      if (response.status === 200) {\n        console.log('Income added Successfully');\n        const newIncomeID = response.data.id;\n        const res = await axios.post(`/addprihod/${kategorijaid}/${newIncomeID}`, {\n          kategorijaid,\n          id: newIncomeID\n        });\n        console.log(res.data);\n        if (res.status === 200) {\n          console.log('Income added successfully to category');\n        }\n      }\n    } catch (err) {\n      console.error('Error adding Income', err);\n    }\n  }, [UserID]);\n  const addExpenditure = useCallback(async (name, kategorijaid, value) => {\n    const Expenditure = {\n      name: name,\n      kategorijaiprihod: kategorijaid,\n      date: newDate,\n      useridodhod: UserID,\n      value: value\n    };\n    console.log(Expenditure);\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/odhod', Expenditure);\n      console.log(response.data);\n      if (response.status === 200) {\n        console.log('Expenditure added Successfully');\n        const newExpenditureID = response.data.id;\n        const res = await axios.post(`/addprihod/${kategorijaid}/${newExpenditureID}`, {\n          kategorijaid,\n          id: newExpenditureID\n        });\n        console.log(res.data);\n        if (res.status === 200) {\n          console.log('Expenditure added successfully to category');\n        }\n      }\n    } catch (err) {\n      console.error('Error adding Expenditure', err);\n    }\n  }, [UserID]);\n  const updateIList = newTList => {\n    setIncomeList(newTList);\n  };\n  const updateEList = newEList => {\n    setExpenditureList(newEList);\n  };\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      IncomeList,\n      ExpenditureList,\n      addIncome,\n      addExpenditure,\n      updateEList,\n      updateIList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionsProvider, \"9JolAdOUT8HoRBnRvYOLO8GKRRo=\");\n_c = TransactionsProvider;\nexport default TransactionsProvider;\nvar _c;\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"names":["TransactionsContext","React","useState","useEffect","useContext","useCallback","LoginContext","axios","jsxDEV","_jsxDEV","TransactionsProvider","_ref","_s","children","IncomeList","setIncomeList","ExpenditureList","setExpenditureList","Error","setError","UserID","parseInt","sessionStorage","getItem","IncomeID","setIncomeID","newDate","Date","date","getDate","month","getMonth","year","getFullYear","getIncomes","res","fetch","ok","data","json","console","log","error","message","getExpenditures","response","addIncome","name","kategorijaid","value","Income","kategorijaidprihod","useridprihod","post","status","newIncomeID","id","err","addExpenditure","Expenditure","kategorijaiprihod","useridodhod","newExpenditureID","updateIList","newTList","updateEList","newEList","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/TransactionsProvider.js"],"sourcesContent":["import TransactionsContext from '../contexts/TransactionsContext'\r\nimport React, { useState, useEffect, useContext, useCallback } from \"react\"\r\nimport { LoginContext } from './LoginProvider';\r\nimport axios from 'axios';\r\n\r\nfunction TransactionsProvider({ children }) {\r\n    const [IncomeList, setIncomeList] = useState([]);\r\n    const [ExpenditureList, setExpenditureList] =  useState([]);\r\n    const [Error, setError] = useState(null)\r\n    const UserID = parseInt(sessionStorage.getItem(\"userID\"))\r\n    const [IncomeID, setIncomeID] = useState()\r\n    let newDate = new Date()\r\n    let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n\r\n    useEffect(() => {\r\n        const getIncomes = async () => {\r\n            try {\r\n                const res = await fetch(`http://localhost:8080/api/v1/prihod/userid/${UserID}`)\r\n                if (!res.ok) {\r\n                    throw new Error('could not fetch data')\r\n                }\r\n                const data = await res.json();\r\n                console.log(data)\r\n                setIncomeList(data)\r\n            } catch (error) {\r\n                setError(error.message);\r\n            }\r\n        };\r\n        getIncomes();\r\n        }, [UserID])\r\n    useEffect(() => {\r\n        const getExpenditures = async () =>{\r\n            \ttry{\r\n                    const response = await fetch(`http://localhost:8080/api/v1/odhod/userid/${UserID}`)\r\n                    if (!response.ok) {\r\n                        throw new Error('could not fetch data')\r\n                    }\r\n                    const data = await response.json();\r\n                    console.log(data)\r\n                    setExpenditureList(data)\r\n\r\n                } catch (error) {\r\n                    setError(error.message);\r\n                }\r\n            };\r\n            getExpenditures();\r\n        }, [UserID])\r\n        const addIncome = useCallback(async (name, kategorijaid, value) => {\r\n            console.log(\"function called\")\r\n            const Income = {\r\n                date: newDate,\r\n                kategorijaidprihod: kategorijaid,\r\n                name: name,\r\n                useridprihod: UserID,\r\n                value: value,\r\n            };\r\n        \r\n            try {\r\n                const response = await axios.post('http://localhost:8080/api/v1/prihod', Income);\r\n                console.log(response.data);\r\n        \r\n                if (response.status === 200) {\r\n                    console.log('Income added Successfully');\r\n                    const newIncomeID = response.data.id;\r\n                    const res = await axios.post(`/addprihod/${kategorijaid}/${newIncomeID}`, { kategorijaid, id: newIncomeID });\r\n                    \r\n                    console.log(res.data);\r\n                    \r\n                    if (res.status === 200) {\r\n                        console.log('Income added successfully to category');\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                console.error('Error adding Income', err);\r\n            }\r\n        }, [UserID]);\r\n            const addExpenditure = useCallback(async( name, kategorijaid, value) =>{\r\n                const Expenditure = {\r\n                    name: name,\r\n                    kategorijaiprihod: kategorijaid,\r\n                    date: newDate,\r\n                    useridodhod: UserID,\r\n                    value: value,\r\n                }\r\n                console.log(Expenditure)\r\n                try {\r\n                    const response = await axios.post('http://localhost:8080/api/v1/odhod', Expenditure);\r\n                    console.log(response.data);\r\n            \r\n                    if (response.status === 200) {\r\n                        console.log('Expenditure added Successfully');\r\n                        const newExpenditureID = response.data.id\r\n                        const res = await axios.post(`/addprihod/${kategorijaid}/${newExpenditureID}`, { kategorijaid, id: newExpenditureID });\r\n                        \r\n                        console.log(res.data);\r\n                        \r\n                        if (res.status === 200) {\r\n                            console.log('Expenditure added successfully to category');\r\n                        }\r\n                    }\r\n                } catch (err) {\r\n                    console.error('Error adding Expenditure', err);\r\n                }\r\n            }, [UserID]);\r\n\r\n\r\n\r\n    const updateIList = (newTList) => {\r\n        setIncomeList(newTList);\r\n    };\r\n    const updateEList = (newEList) => {\r\n        setExpenditureList(newEList)\r\n    }\r\n    return (\r\n        <TransactionsContext.Provider value={{IncomeList, ExpenditureList, addIncome, addExpenditure, updateEList, updateIList }}>\r\n            {children}\r\n        </TransactionsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TransactionsProvider\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}