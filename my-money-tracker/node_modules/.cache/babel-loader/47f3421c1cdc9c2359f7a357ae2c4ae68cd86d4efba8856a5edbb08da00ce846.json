{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\TransactionsProvider.js\",\n  _s = $RefreshSig$();\nimport TransactionsContext from '../contexts/TransactionsContext';\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { LoginContext } from './LoginProvider';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionsProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [IncomeList, setIncomeList] = useState([]);\n  const [ExpenditureList, setExpenditureList] = useState([]);\n  const [Error, setError] = useState(null);\n  const {\n    UserID\n  } = useContext(LoginContext);\n  useEffect(() => {\n    const getIncomes = async () => {\n      try {\n        const res = await fetch(`http://localhost:8080/api/v1/prihod/${UserID}`);\n        if (!res.ok) {\n          throw new Error('could not fetch data');\n        }\n        const data = await res.json();\n        console.log(data);\n        setIncomeList(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getIncomes();\n  }, []);\n  useEffect(() => {\n    const getExpenditures = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/api/v1/odhod/${UserID}`);\n        if (!response.ok) {\n          throw new Error('could not fetch data');\n        }\n        const data = await response.json();\n        console.log(data);\n        setExpenditureList(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getExpenditures();\n  }, []);\n  useEffect(() => {\n    const addIncome = async (incomeID, name, kategorija, userprihod, date, value) => {\n      const Income = {\n        name: name,\n        kategorijaidprihod: kategorija,\n        user: userprihod,\n        date: date,\n        value: value,\n        userid: UserID\n      };\n      try {\n        await axios.post(`api/v1/prihod`, Income).then(response => {\n          console.log(response.data);\n          if (response.status === 200) {\n            console.log(\"Income added Successfully\");\n          }\n        });\n        await axios.post(`/addprihod/${kategorijaidprihod}/${incomeID}`, kategorijaidprihod, incomeID);\n      } catch (err) {\n        console.error('Error adding Income', err);\n      }\n    };\n  }, [UserID]);\n  const updateIList = newTList => {\n    setIncomeList(newTList);\n  };\n  const updateEList = newEList => {\n    setExpenditureList(newEList);\n  };\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      IncomeList,\n      ExpenditureList,\n      updateEList,\n      updateIList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionsProvider, \"jhFuhlb2XA6ThERfd737dutuZWk=\");\n_c = TransactionsProvider;\nexport default TransactionsProvider;\nvar _c;\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"names":["TransactionsContext","React","useState","useEffect","useContext","LoginContext","axios","jsxDEV","_jsxDEV","TransactionsProvider","_ref","_s","children","IncomeList","setIncomeList","ExpenditureList","setExpenditureList","Error","setError","UserID","getIncomes","res","fetch","ok","data","json","console","log","error","message","getExpenditures","response","addIncome","incomeID","name","kategorija","userprihod","date","value","Income","kategorijaidprihod","user","userid","post","then","status","err","updateIList","newTList","updateEList","newEList","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/TransactionsProvider.js"],"sourcesContent":["import TransactionsContext from '../contexts/TransactionsContext'\r\nimport React, { useState, useEffect, useContext } from \"react\"\r\nimport { LoginContext } from './LoginProvider';\r\nimport axios from 'axios';\r\n\r\nfunction TransactionsProvider({ children }) {\r\n    const [IncomeList, setIncomeList] = useState([]);\r\n    const [ExpenditureList, setExpenditureList] =  useState([]);\r\n    const [Error, setError] = useState(null)\r\n    const { UserID } = useContext(LoginContext)\r\n\r\n    useEffect(() => {\r\n        const getIncomes = async () => {\r\n            try {\r\n                const res = await fetch(`http://localhost:8080/api/v1/prihod/${UserID}`)\r\n                if (!res.ok) {\r\n                    throw new Error('could not fetch data')\r\n                }\r\n                const data = await res.json();\r\n                console.log(data)\r\n                setIncomeList(data)\r\n            } catch (error) {\r\n                setError(error.message);\r\n            }\r\n        };\r\n        getIncomes();\r\n        }, [])\r\n    useEffect(() => {\r\n        const getExpenditures = async () =>{\r\n            \ttry{\r\n                    const response = await fetch(`http://localhost:8080/api/v1/odhod/${UserID}`)\r\n                    if (!response.ok) {\r\n                        throw new Error('could not fetch data')\r\n                    }\r\n                    const data = await response.json();\r\n                    console.log(data)\r\n                    setExpenditureList(data)\r\n\r\n                } catch (error) {\r\n                    setError(error.message);\r\n                }\r\n            };\r\n            getExpenditures();\r\n        }, [])\r\n        useEffect(() => {\r\n            const addIncome = async (incomeID, name, kategorija, userprihod, date, value) =>{\r\n                const Income = {\r\n                    name: name,\r\n                    kategorijaidprihod: kategorija,\r\n                    user: userprihod,\r\n                    date: date,\r\n                    value: value,\r\n                    userid: UserID\r\n                }\r\n                try {\r\n                    await axios.post(`api/v1/prihod`, Income)\r\n                    .then(response => {\r\n                        console.log(response.data)\r\n                        if (response.status === 200){\r\n                            console.log(\"Income added Successfully\")\r\n                        }\r\n                    })\r\n                    await axios.post(`/addprihod/${kategorijaidprihod}/${incomeID}`, kategorijaidprihod, incomeID )\r\n                }   \r\n                catch (err) {\r\n                    console.error('Error adding Income', err)\r\n                }\r\n            }\r\n            }, [UserID])\r\n\r\n\r\n\r\n    const updateIList = (newTList) => {\r\n        setIncomeList(newTList);\r\n    };\r\n    const updateEList = (newEList) => {\r\n        setExpenditureList(newEList)\r\n    }\r\n    return (\r\n        <TransactionsContext.Provider value={{IncomeList, ExpenditureList, updateEList, updateIList }}>\r\n            {children}\r\n        </TransactionsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TransactionsProvider\r\n"],"mappings":";;AAAA,OAAOA,mBAAmB,MAAM,iCAAiC;AACjE,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,oBAAoBA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACtC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAId,QAAQ,CAAC,EAAE,CAAC;EAC3D,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEiB;EAAO,CAAC,GAAGf,UAAU,CAACC,YAAY,CAAC;EAE3CF,SAAS,CAAC,MAAM;IACZ,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,uCAAsCH,MAAO,EAAC,CAAC;QACxE,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE;UACT,MAAM,IAAIN,KAAK,CAAC,sBAAsB,CAAC;QAC3C;QACA,MAAMO,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBV,aAAa,CAACU,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZV,QAAQ,CAACU,KAAK,CAACC,OAAO,CAAC;MAC3B;IACJ,CAAC;IACDT,UAAU,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EACVjB,SAAS,CAAC,MAAM;IACZ,MAAM2B,eAAe,GAAG,MAAAA,CAAA,KAAW;MAC9B,IAAG;QACI,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAE,sCAAqCH,MAAO,EAAC,CAAC;QAC5E,IAAI,CAACY,QAAQ,CAACR,EAAE,EAAE;UACd,MAAM,IAAIN,KAAK,CAAC,sBAAsB,CAAC;QAC3C;QACA,MAAMO,IAAI,GAAG,MAAMO,QAAQ,CAACN,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBR,kBAAkB,CAACQ,IAAI,CAAC;MAE5B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZV,QAAQ,CAACU,KAAK,CAACC,OAAO,CAAC;MAC3B;IACJ,CAAC;IACDC,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACN3B,SAAS,CAAC,MAAM;IACZ,MAAM6B,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,EAAEC,UAAU,EAAEC,UAAU,EAAEC,IAAI,EAAEC,KAAK,KAAI;MAC5E,MAAMC,MAAM,GAAG;QACXL,IAAI,EAAEA,IAAI;QACVM,kBAAkB,EAAEL,UAAU;QAC9BM,IAAI,EAAEL,UAAU;QAChBC,IAAI,EAAEA,IAAI;QACVC,KAAK,EAAEA,KAAK;QACZI,MAAM,EAAEvB;MACZ,CAAC;MACD,IAAI;QACA,MAAMb,KAAK,CAACqC,IAAI,CAAE,eAAc,EAAEJ,MAAM,CAAC,CACxCK,IAAI,CAACb,QAAQ,IAAI;UACdL,OAAO,CAACC,GAAG,CAACI,QAAQ,CAACP,IAAI,CAAC;UAC1B,IAAIO,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAC;YACxBnB,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;UAC5C;QACJ,CAAC,CAAC;QACF,MAAMrB,KAAK,CAACqC,IAAI,CAAE,cAAaH,kBAAmB,IAAGP,QAAS,EAAC,EAAEO,kBAAkB,EAAEP,QAAS,CAAC;MACnG,CAAC,CACD,OAAOa,GAAG,EAAE;QACRpB,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEkB,GAAG,CAAC;MAC7C;IACJ,CAAC;EACD,CAAC,EAAE,CAAC3B,MAAM,CAAC,CAAC;EAIpB,MAAM4B,WAAW,GAAIC,QAAQ,IAAK;IAC9BlC,aAAa,CAACkC,QAAQ,CAAC;EAC3B,CAAC;EACD,MAAMC,WAAW,GAAIC,QAAQ,IAAK;IAC9BlC,kBAAkB,CAACkC,QAAQ,CAAC;EAChC,CAAC;EACD,oBACI1C,OAAA,CAACR,mBAAmB,CAACmD,QAAQ;IAACb,KAAK,EAAE;MAACzB,UAAU;MAAEE,eAAe;MAAEkC,WAAW;MAAEF;IAAY,CAAE;IAAAnC,QAAA,EACzFA;EAAQ;IAAAwC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEvC;AAAC5C,EAAA,CA9EQF,oBAAoB;AAAA+C,EAAA,GAApB/C,oBAAoB;AAgF7B,eAAeA,oBAAoB;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}