{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\CategoryProvider.js\",\n  _s = $RefreshSig$();\nimport CategoryContext from \"../contexts/CategoryContext\";\nimport React, { useState, useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { LoginContext } from \"./LoginProvider\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [CategoryList, setCategoryList] = useState([]);\n  const storedUserID = parseInt(sessionStorage.getItem('userID'));\n  console.log(storedUserID);\n  const storedEmail = sessionStorage.getItem('email');\n  const storedName = sessionStorage.getItem('name');\n  const storedSurname = sessionStorage.getItem('surname');\n  const storedIsLoggedIn = JSON.parse(sessionStorage.getItem('isLoggedIn'));\n  const Category = {\n    name: String,\n    userid: storedUserID,\n    limita: Number,\n    tip: Boolean,\n    transactions: []\n  };\n  const CategoryType = {\n    income: 'income',\n    expenditure: 'expenditure'\n  };\n  PropTypes.AlltransactionsTable = {\n    Income: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n      CategoryID: PropTypes.number.isRequired\n    }),\n    Expenditure: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      CategoryID: PropTypes.number.isRequired\n    }),\n    Category: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      spendingLimit: PropTypes.number.isRequired,\n      categoryType: PropTypes.oneOf(Object.values(CategoryType)).isRequired\n    })\n  };\n  useEffect(() => {\n    fetch(`http://localhost:8080/api/v1/kategorija/getbyuserid/${storedUserID}`).then(res => {\n      return res.json();\n    }).then(async data => {\n      if (Array.isArray(data)) {\n        for (let category of data) {\n          const rez = await axios.get(`http://localhost:8080/api/v1/kategorija/vsiprihodi/${category.id}`);\n          if (rez.status === 200) {\n            category.transactions = rez.data;\n            console.log(category.id);\n          }\n        }\n        updateCList(data);\n      } else {\n        console.warn('Received non-array data:', data);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching transaction data:\", error);\n    });\n  }, [storedUserID]);\n  const updateCList = newCList => {\n    setCategoryList(newCList);\n  };\n  const addCategory = async (name, limita, tip) => {\n    console.log('addCategory function called with:', name, limita, tip, storedUserID);\n    try {\n      const newCategory = {\n        name: name,\n        userid: storedUserID,\n        limita: limita,\n        tip: tip,\n        transactions: []\n      };\n      const response = await axios.post('http://localhost:8080/api/v1/kategorija/add', newCategory);\n      if (response.status === 200) {\n        console.log(response);\n        console.log(newCategory);\n        console.log(CategoryList);\n        setCategoryList(CategoryList => [...CategoryList, newCategory]);\n        ;\n      }\n    } catch (error) {\n      console.error(\"error adding Category\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CategoryContext.Provider, {\n    value: {\n      CategoryList,\n      addCategory,\n      updateCList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(CategoryProvider, \"5jlr0NTYZO8B5wAnOALGeJE6OOE=\");\n_c = CategoryProvider;\nexport default CategoryProvider;\nvar _c;\n$RefreshReg$(_c, \"CategoryProvider\");","map":{"version":3,"names":["CategoryContext","React","useState","useEffect","useContext","LoginContext","axios","jsxDEV","_jsxDEV","CategoryProvider","_ref","_s","children","CategoryList","setCategoryList","storedUserID","parseInt","sessionStorage","getItem","console","log","storedEmail","storedName","storedSurname","storedIsLoggedIn","JSON","parse","Category","name","String","userid","limita","Number","tip","Boolean","transactions","CategoryType","income","expenditure","PropTypes","AlltransactionsTable","Income","shape","id","number","isRequired","string","amount","date","CategoryID","Expenditure","spendingLimit","categoryType","oneOf","Object","values","fetch","then","res","json","data","Array","isArray","category","rez","get","status","updateCList","warn","catch","error","newCList","addCategory","newCategory","response","post","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/CategoryProvider.js"],"sourcesContent":["import CategoryContext from \"../contexts/CategoryContext\";\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { useContext } from \"react\";\r\nimport { LoginContext } from \"./LoginProvider\";\r\nimport axios from 'axios'\r\n\r\nfunction CategoryProvider({ children }) {\r\n    const [CategoryList, setCategoryList] = useState([]);\r\n    const storedUserID = parseInt(sessionStorage.getItem('userID'));\r\n    console.log(storedUserID)\r\n    const storedEmail = sessionStorage.getItem('email');\r\n    const storedName = sessionStorage.getItem('name');\r\n    const storedSurname = sessionStorage.getItem('surname');\r\n    const storedIsLoggedIn = JSON.parse(sessionStorage.getItem('isLoggedIn'));\r\n    const Category = {\r\n      name: String,\r\n      userid: storedUserID,\r\n      limita: Number,\r\n      tip: Boolean,\r\n      transactions: []\r\n    }\r\n    const CategoryType = {\r\n      income: 'income',\r\n      expenditure: 'expenditure'\r\n  }\r\n  \r\n  PropTypes.AlltransactionsTable = {\r\n      Income: PropTypes.shape({\r\n          id: PropTypes.number.isRequired,\r\n          name: PropTypes.string.isRequired,\r\n          amount: PropTypes.number.isRequired, \r\n          date: PropTypes.string.isRequired,\r\n          CategoryID: PropTypes.number.isRequired\r\n          }),\r\n      Expenditure: PropTypes.shape({\r\n          id: PropTypes.number.isRequired,\r\n          name: PropTypes.string.isRequired,\r\n          amount: PropTypes.number.isRequired, \r\n          CategoryID: PropTypes.number.isRequired\r\n      }),\r\n        Category: PropTypes.shape({\r\n          id: PropTypes.number.isRequired,\r\n          name: PropTypes.string.isRequired,\r\n          spendingLimit: PropTypes.number.isRequired,\r\n          categoryType: PropTypes.oneOf(Object.values(CategoryType)).isRequired\r\n        })\r\n  }\r\n  \r\n\r\n  \r\n    useEffect(() => {\r\n      fetch(`http://localhost:8080/api/v1/kategorija/getbyuserid/${storedUserID}`)\r\n      .then((res) => {\r\n          return res.json();\r\n      })\r\n      .then(async (data) => {\r\n          if (Array.isArray(data)) {\r\n              for (let category of data) {\r\n                  const rez = await axios.get(`http://localhost:8080/api/v1/kategorija/vsiprihodi/${category.id}`);\r\n                  if (rez.status === 200) {\r\n                      category.transactions = rez.data; \r\n                      console.log(category.id)\r\n                  }\r\n              }\r\n              updateCList(data);\r\n          } else {\r\n              console.warn('Received non-array data:', data);\r\n          }\r\n      })\r\n      .catch((error) => {\r\n          console.error(\"Error fetching transaction data:\", error);\r\n      });\r\n    }, [storedUserID]);\r\n    \r\n\r\n    const updateCList = (newCList) => {\r\n        setCategoryList(newCList);\r\n    };\r\n\r\n    const addCategory = async (name, limita, tip) => {\r\n      console.log('addCategory function called with:', name, limita, tip, storedUserID);\r\n        try {\r\n          const newCategory = {\r\n            name: name,\r\n            userid: storedUserID,\r\n            limita: limita,\r\n            tip: tip,\r\n            transactions: []\r\n          }\r\n          const response = await axios.post('http://localhost:8080/api/v1/kategorija/add',  newCategory );\r\n          if (response.status === 200) {\r\n\r\n            console.log(response);\r\n            console.log(newCategory)\r\n            console.log(CategoryList)\r\n            setCategoryList(CategoryList => [...CategoryList, newCategory]);;\r\n          }\r\n        } catch (error) {\r\n          console.error(\"error adding Category\", error);\r\n        }\r\n      };\r\n\r\n    \r\n\r\n    return (\r\n        <CategoryContext.Provider value={{CategoryList, addCategory, updateCList }}>\r\n            {children}\r\n        </CategoryContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default CategoryProvider\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}