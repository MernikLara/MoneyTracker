{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\LoginProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useEffect, useState, useCallback } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/createContext();\nconst LogOut = () => {\n  _s();\n  const [name, setUsername] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userID, setUserID] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  setIsLoggedIn(false);\n  setEmail('');\n  setUsername('');\n  setSurname('');\n  setUserID(null);\n  sessionStorage.clear();\n  console.log(\"succeffuly logged out\");\n};\n_s(LogOut, \"ZreVzyQ8cW6HvGhbDi14YazOnCc=\");\n_c = LogOut;\nconst LoginProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [name, setUsername] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userID, setUserID] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const authenticateUser = useCallback(async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/user/login', {\n        email,\n        password\n      });\n      if (response.status === 200) {\n        const Userid = response.data.id;\n        if (isNaN(Userid)) {\n          console.log(\"error with getting session ID\");\n          navigate('/');\n        } else {\n          setUserID(Userid);\n          setEmail(email);\n          setUsername(response.data.name);\n          setSurname(response.data.surname);\n          setIsLoggedIn(true);\n        }\n        sessionStorage.setItem('userID', Userid);\n        sessionStorage.setItem('email', email);\n        sessionStorage.setItem('name', response.data.name);\n        sessionStorage.setItem('surname', response.data.surname);\n        sessionStorage.setItem('isLoggedIn', 'true');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    console.log(userID);\n  }, []);\n  useEffect(() => {\n    const storedUserID = sessionStorage.getItem('userID');\n    const storedEmail = sessionStorage.getItem('email');\n    const storedName = sessionStorage.getItem('name');\n    const storedSurname = sessionStorage.getItem('surname');\n    const storedIsLoggedIn = sessionStorage.getItem('isLoggedIn');\n    if (storedIsLoggedIn === 'true') {\n      setUserID(storedUserID);\n      setEmail(storedEmail);\n      setUsername(storedName);\n      setSurname(storedSurname);\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const registerUser = useCallback(async (name, surname, password, email) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/user/register', {\n        name,\n        password,\n        email,\n        surname\n      });\n      if (response.status === 200) {\n        setUsername(name);\n        setSurname(surname);\n        setPassword(password);\n        setEmail(email);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      name,\n      email,\n      surname,\n      userID,\n      authenticateUser,\n      LogOut,\n      registerUser,\n      isLoggedIn,\n      setIsLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s2(LoginProvider, \"y0zCZOUw9KbgZfKPtr/aB4T87pk=\", false, function () {\n  return [useNavigate];\n});\n_c2 = LoginProvider;\nexport { LoginProvider, LoginContext, LogOut };\nvar _c, _c2;\n$RefreshReg$(_c, \"LogOut\");\n$RefreshReg$(_c2, \"LoginProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useCallback","axios","useNavigate","jsxDEV","_jsxDEV","LoginContext","LogOut","_s","name","setUsername","surname","setSurname","password","setPassword","userID","setUserID","email","setEmail","isLoggedIn","setIsLoggedIn","sessionStorage","clear","console","log","_c","LoginProvider","_ref","_s2","children","navigate","authenticateUser","response","post","status","Userid","data","id","isNaN","setItem","error","storedUserID","getItem","storedEmail","storedName","storedSurname","storedIsLoggedIn","registerUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/LoginProvider.js"],"sourcesContent":["import React, { createContext, useEffect, useState, useCallback } from \"react\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst LoginContext = createContext();\r\nconst LogOut = () => {\r\n  const [name, setUsername] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userID, setUserID] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  setIsLoggedIn(false);\r\n  setEmail('');\r\n  setUsername('');\r\n  setSurname('');\r\n  setUserID(null);\r\n  sessionStorage.clear();\r\n  console.log(\"succeffuly logged out\")\r\n}\r\n\r\nconst LoginProvider = ({ children }) => {\r\n  const [name, setUsername] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userID, setUserID] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  \r\n  const authenticateUser = useCallback(async (email, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/v1/user/login', {email, password});\r\n      if (response.status === 200) {\r\n        const Userid = response.data.id \r\n        if(isNaN(Userid)){\r\n          console.log(\"error with getting session ID\")\r\n          navigate('/')\r\n          \r\n        }\r\n        else {\r\n          setUserID(Userid);\r\n          setEmail(email);\r\n          setUsername(response.data.name);\r\n          setSurname(response.data.surname)\r\n          setIsLoggedIn(true)\r\n        }\r\n        sessionStorage.setItem('userID', Userid);\r\n        sessionStorage.setItem('email', email);\r\n        sessionStorage.setItem('name', response.data.name);\r\n        sessionStorage.setItem('surname', response.data.surname);\r\n        sessionStorage.setItem('isLoggedIn', 'true');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } console.log(userID);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n      const storedUserID = sessionStorage.getItem('userID');\r\n      const storedEmail = sessionStorage.getItem('email');\r\n      const storedName = sessionStorage.getItem('name');\r\n      const storedSurname = sessionStorage.getItem('surname');\r\n      const storedIsLoggedIn = sessionStorage.getItem('isLoggedIn');\r\n\r\n        if (storedIsLoggedIn === 'true') {\r\n            setUserID(storedUserID);\r\n            setEmail(storedEmail);\r\n            setUsername(storedName);\r\n            setSurname(storedSurname);\r\n            setIsLoggedIn(true);\r\n        }\r\n  }, []);\r\n\r\n\r\n  const registerUser = useCallback(async (name, surname, password, email) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/v1/user/register', { name, password, email, surname });\r\n      if (response.status === 200) {\r\n        setUsername(name);\r\n        setSurname(surname)\r\n        setPassword(password);\r\n        setEmail(email);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <LoginContext.Provider value={{ name, email, surname, userID,  authenticateUser, LogOut, registerUser, isLoggedIn, setIsLoggedIn }}>\r\n      {children}\r\n    </LoginContext.Provider>\r\n  );\r\n};\r\n\r\nexport { LoginProvider, LoginContext, LogOut };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}