{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\LoginProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/createContext();\nconst LoginProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [name, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userID, setUserID] = useState();\n  const [email, setEmail] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const authenticateUser = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/user/login', username, password);\n      if (response.status === 200) {\n        setUserID(response.data.id);\n        setUsername(name);\n        setPassword(password);\n        setIsLoggedIn(true);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const registerUser = async (name, password, email) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/user/register', {\n        name,\n        password,\n        email\n      });\n      if (response.status === 200) {\n        setUsername(name);\n        setPassword(password);\n        setEmail(email);\n        setIsLoggedIn(true);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      name,\n      password,\n      authenticateUser,\n      registerUser,\n      isLoggedIn,\n      setIsLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginProvider, \"/7NzgWfD/yrrmk725I6vT5mpVN4=\");\n_c = LoginProvider;\nexport { LoginProvider, LoginContext };\nvar _c;\n$RefreshReg$(_c, \"LoginProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","jsxDEV","_jsxDEV","LoginContext","LoginProvider","_ref","_s","children","name","setUsername","password","setPassword","userID","setUserID","email","setEmail","isLoggedIn","setIsLoggedIn","authenticateUser","username","response","post","status","data","id","error","console","registerUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/LoginProvider.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst LoginContext = createContext();\r\n\r\nconst LoginProvider = ({ children }) => {\r\n  const [name, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userID, setUserID] = useState();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const authenticateUser = async (username, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/v1/user/login', username, password);\r\n      if (response.status === 200) {\r\n        setUserID(response.data.id);\r\n        setUsername(name);\r\n        setPassword(password);\r\n        setIsLoggedIn(true)\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const registerUser = async (name, password, email) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/v1/user/register', { name, password, email });\r\n      if (response.status === 200) {\r\n        setUsername(name);\r\n        setPassword(password);\r\n        setEmail(email);\r\n        setIsLoggedIn(true)\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginContext.Provider value={{ name, password, authenticateUser, registerUser, isLoggedIn, setIsLoggedIn }}>\r\n      {children}\r\n    </LoginContext.Provider>\r\n  );\r\n};\r\n\r\nexport { LoginProvider, LoginContext };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,MAAMM,aAAa,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,IAAI,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMmB,gBAAgB,GAAG,MAAAA,CAAOC,QAAQ,EAAET,QAAQ,KAAK;IACrD,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,yCAAyC,EAAEF,QAAQ,EAAET,QAAQ,CAAC;MAChG,IAAIU,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3BT,SAAS,CAACO,QAAQ,CAACG,IAAI,CAACC,EAAE,CAAC;QAC3Bf,WAAW,CAACD,IAAI,CAAC;QACjBG,WAAW,CAACD,QAAQ,CAAC;QACrBO,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAOnB,IAAI,EAAEE,QAAQ,EAAEI,KAAK,KAAK;IACpD,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,4CAA4C,EAAE;QAAEb,IAAI;QAAEE,QAAQ;QAAEI;MAAM,CAAC,CAAC;MAC1G,IAAIM,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3Bb,WAAW,CAACD,IAAI,CAAC;QACjBG,WAAW,CAACD,QAAQ,CAAC;QACrBK,QAAQ,CAACD,KAAK,CAAC;QACfG,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,YAAY,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAErB,IAAI;MAAEE,QAAQ;MAAEQ,gBAAgB;MAAES,YAAY;MAAEX,UAAU;MAAEC;IAAc,CAAE;IAAAV,QAAA,EACzGA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC3B,EAAA,CAxCIF,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AA0CnB,SAASA,aAAa,EAAED,YAAY;AAAG,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}