{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\TransactionsProvider.js\",\n  _s = $RefreshSig$();\nimport TransactionsContext from '../contexts/TransactionsContext';\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionsProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [TransactionIList, setTransactionIList] = useState([]);\n  const [TransactionEList, setTransactionEList] = useState([]);\n  const [Error, setError] = useState(null);\n  useEffect(() => {\n    const getTransactionsPrihod = async () => {\n      try {\n        const res = await fetch('http://localhost:8080/api/v1/prihod');\n        if (!res.ok) {\n          throw new Error('could not fetch data');\n        }\n        const data = await res.json();\n        console.log(data);\n        setTransactionIList(...TransactionIList, data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getTransactionsPrihod();\n  }, []);\n  useEffect(() => {\n    const getTransactionsOdhod = async () => {\n      try {\n        const res = await fetch('http://localhost:8080/api/v1/odhod');\n        if (!res.ok) {\n          throw new Error('could not fetch data');\n        }\n        const data = await res.json();\n        console.log(data);\n        setTransactionEList(...TransactionEList, data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getTransactionsOdhod();\n  }, []);\n  const updateEList = newEList => {\n    setTransactionEList(newEList);\n  };\n  const updateIList = newIList => {\n    setTransactionIList(newIList);\n  };\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      TransactionEList,\n      TransactionIList,\n      updateIList,\n      updateEList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionsProvider, \"6waCw2kC+Cr9mU4p9M0/7roIGnY=\");\n_c = TransactionsProvider;\nexport default TransactionsProvider;\nvar _c;\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"names":["TransactionsContext","React","useState","useEffect","jsxDEV","_jsxDEV","TransactionsProvider","_ref","_s","children","TransactionIList","setTransactionIList","TransactionEList","setTransactionEList","Error","setError","getTransactionsPrihod","res","fetch","ok","data","json","console","log","error","message","getTransactionsOdhod","updateEList","newEList","updateIList","newIList","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/TransactionsProvider.js"],"sourcesContent":["import TransactionsContext from '../contexts/TransactionsContext'\r\nimport React, { useState, useEffect } from \"react\"\r\n\r\nfunction TransactionsProvider({ children }) {\r\n    const [TransactionIList, setTransactionIList] = useState([]);\r\n    const [TransactionEList, setTransactionEList] = useState([])\r\n    const [Error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const getTransactionsPrihod = async () => {\r\n            try {\r\n                const res = await fetch('http://localhost:8080/api/v1/prihod')\r\n                if (!res.ok) {\r\n                    throw new Error('could not fetch data')\r\n                }\r\n                const data = await res.json();\r\n                console.log(data)\r\n                setTransactionIList(...TransactionIList, data)\r\n            } catch (error) {\r\n                setError(error.message);\r\n            }\r\n        };\r\n        getTransactionsPrihod();\r\n        }, [])\r\n\r\n        useEffect(() => {\r\n            const getTransactionsOdhod = async () => {\r\n                try {\r\n                    const res = await fetch('http://localhost:8080/api/v1/odhod')\r\n                    if (!res.ok) {\r\n                        throw new Error('could not fetch data')\r\n                    }\r\n                    const data = await res.json();\r\n                    console.log(data)\r\n                    setTransactionEList(...TransactionEList, data)\r\n                } catch (error) {\r\n                    setError(error.message);\r\n                }\r\n            };\r\n            getTransactionsOdhod();\r\n            }, [])\r\n    \r\n\r\n    const updateEList = (newEList) => {\r\n        setTransactionEList(newEList);\r\n    };\r\n\r\n    const updateIList = (newIList) => {\r\n        setTransactionIList(newIList);\r\n    };\r\n    return (\r\n        <TransactionsContext.Provider value={{TransactionEList, TransactionIList, updateIList, updateEList }}>\r\n            {children}\r\n        </TransactionsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TransactionsProvider\r\n"],"mappings":";;AAAA,OAAOA,mBAAmB,MAAM,iCAAiC;AACjE,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,oBAAoBA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACtC,MAAM,CAACG,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMa,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QAC9D,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;UACT,MAAM,IAAIL,KAAK,CAAC,sBAAsB,CAAC;QAC3C;QACA,MAAMM,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBT,mBAAmB,CAAC,GAAGD,gBAAgB,EAAEU,IAAI,CAAC;MAClD,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZT,QAAQ,CAACS,KAAK,CAACC,OAAO,CAAC;MAC3B;IACJ,CAAC;IACDT,qBAAqB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACZ,MAAMuB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACA,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAC7D,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;UACT,MAAM,IAAIL,KAAK,CAAC,sBAAsB,CAAC;QAC3C;QACA,MAAMM,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBP,mBAAmB,CAAC,GAAGD,gBAAgB,EAAEQ,IAAI,CAAC;MAClD,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZT,QAAQ,CAACS,KAAK,CAACC,OAAO,CAAC;MAC3B;IACJ,CAAC;IACDC,oBAAoB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAGd,MAAMC,WAAW,GAAIC,QAAQ,IAAK;IAC9Bf,mBAAmB,CAACe,QAAQ,CAAC;EACjC,CAAC;EAED,MAAMC,WAAW,GAAIC,QAAQ,IAAK;IAC9BnB,mBAAmB,CAACmB,QAAQ,CAAC;EACjC,CAAC;EACD,oBACIzB,OAAA,CAACL,mBAAmB,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAACpB,gBAAgB;MAAEF,gBAAgB;MAAEmB,WAAW;MAAEF;IAAY,CAAE;IAAAlB,QAAA,EAChGA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEvC;AAAC5B,EAAA,CApDQF,oBAAoB;AAAA+B,EAAA,GAApB/B,oBAAoB;AAsD7B,eAAeA,oBAAoB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}