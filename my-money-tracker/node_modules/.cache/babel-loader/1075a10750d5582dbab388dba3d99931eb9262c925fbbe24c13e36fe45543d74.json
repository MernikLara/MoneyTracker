{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\CategoryProvider.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CategoryContext = /*#__PURE__*/createContext();\nexport const CategoryProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [Categories, setCategories] = useState([]);\n  const updateCList = newCList => {\n    setCategories(newCList);\n  };\n  useEffect(() => {\n    fetch('http://localhost:8080/api/v1/kategorija').then(response => response.json()).then(data => setCategories(data)).catch(error => console.error('Error:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CategoryContext.Provider, {\n    value: {\n      Categories,\n      updateCList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryProvider, \"BjjQeddTvai7Ijz5R5lVA8uIz0s=\");\n_c = CategoryProvider;\nvar _c;\n$RefreshReg$(_c, \"CategoryProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","jsxDEV","_jsxDEV","CategoryContext","CategoryProvider","_ref","_s","children","Categories","setCategories","updateCList","newCList","fetch","then","response","json","data","catch","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/CategoryProvider.js"],"sourcesContent":["import { useState, useEffect, createContext } from 'react';\r\n\r\nexport const CategoryContext = createContext();\r\n\r\nexport const CategoryProvider = ({ children }) => {\r\n  const [Categories, setCategories] = useState([]);\r\n\r\n  const updateCList = (newCList) => {\r\n    setCategories(newCList);\r\n};\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/api/v1/kategorija')\r\n      .then(response => response.json())\r\n      .then(data => setCategories(data))\r\n      .catch(error => console.error('Error:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <CategoryContext.Provider value={{Categories, updateCList}}>\r\n      {children}\r\n    </CategoryContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,eAAe,gBAAGH,aAAa,CAAC,CAAC;AAE9C,OAAO,MAAMI,gBAAgB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC3C,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMY,WAAW,GAAIC,QAAQ,IAAK;IAChCF,aAAa,CAACE,QAAQ,CAAC;EAC3B,CAAC;EAECZ,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,yCAAyC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,aAAa,CAACO,IAAI,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA,CAACC,eAAe,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAACb,UAAU;MAAEE;IAAW,CAAE;IAAAH,QAAA,EACxDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACnB,EAAA,CAnBWF,gBAAgB;AAAAsB,EAAA,GAAhBtB,gBAAgB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}