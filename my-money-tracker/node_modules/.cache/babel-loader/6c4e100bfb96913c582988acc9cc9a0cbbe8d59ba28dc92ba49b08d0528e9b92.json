{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Robotgeek\\\\Documents\\\\GitHub\\\\MoneyTracker\\\\my-money-tracker\\\\src\\\\components\\\\LoginProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState, useCallback } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/createContext();\nconst LogOut = () => {\n  setIsLoggedIn(false);\n  setEmail('');\n  setUsername('');\n  setSurname('');\n  setUserID(null);\n  sessionStorage.clear();\n  console.log(\"succeffuly logged out\");\n};\n_c = LogOut;\nconst LoginProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [name, setUsername] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userID, setUserID] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const authenticateUser = useCallback(async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/user/login', {\n        email,\n        password\n      });\n      if (response.status === 200) {\n        const Userid = response.data.id;\n        if (isNaN(Userid)) {\n          console.log(\"error with getting session ID\");\n          navigate('/');\n        } else {\n          setUserID(Userid);\n          setEmail(email);\n          setUsername(response.data.name);\n          setSurname(response.data.surname);\n          setIsLoggedIn(true);\n        }\n        sessionStorage.setItem('userID', Userid);\n        sessionStorage.setItem('email', email);\n        sessionStorage.setItem('name', response.data.name);\n        sessionStorage.setItem('surname', response.data.surname);\n        sessionStorage.setItem('isLoggedIn', 'true');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    console.log(userID);\n  }, []);\n  useEffect(() => {\n    const storedUserID = sessionStorage.getItem('userID');\n    const storedEmail = sessionStorage.getItem('email');\n    const storedName = sessionStorage.getItem('name');\n    const storedSurname = sessionStorage.getItem('surname');\n    const storedIsLoggedIn = sessionStorage.getItem('isLoggedIn');\n    if (storedIsLoggedIn === 'true') {\n      setUserID(storedUserID);\n      setEmail(storedEmail);\n      setUsername(storedName);\n      setSurname(storedSurname);\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const registerUser = useCallback(async (name, surname, password, email) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/user/register', {\n        name,\n        password,\n        email,\n        surname\n      });\n      if (response.status === 200) {\n        setUsername(name);\n        setSurname(surname);\n        setPassword(password);\n        setEmail(email);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      name,\n      email,\n      surname,\n      userID,\n      authenticateUser,\n      LogOut,\n      registerUser,\n      isLoggedIn,\n      setIsLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginProvider, \"y0zCZOUw9KbgZfKPtr/aB4T87pk=\", false, function () {\n  return [useNavigate];\n});\n_c2 = LoginProvider;\nexport { LoginProvider, LoginContext, LogOut };\nvar _c, _c2;\n$RefreshReg$(_c, \"LogOut\");\n$RefreshReg$(_c2, \"LoginProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useCallback","axios","useNavigate","jsxDEV","_jsxDEV","LoginContext","LogOut","setIsLoggedIn","setEmail","setUsername","setSurname","setUserID","sessionStorage","clear","console","log","_c","LoginProvider","_ref","_s","children","name","surname","password","setPassword","userID","email","isLoggedIn","navigate","authenticateUser","response","post","status","Userid","data","id","isNaN","setItem","error","storedUserID","getItem","storedEmail","storedName","storedSurname","storedIsLoggedIn","registerUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["D:/Users/Robotgeek/Documents/GitHub/MoneyTracker/my-money-tracker/src/components/LoginProvider.js"],"sourcesContent":["import React, { createContext, useEffect, useState, useCallback } from \"react\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst LoginContext = createContext();\r\nconst LogOut = () => {\r\n  setIsLoggedIn(false);\r\n  setEmail('');\r\n  setUsername('');\r\n  setSurname('');\r\n  setUserID(null);\r\n  sessionStorage.clear();\r\n  console.log(\"succeffuly logged out\")\r\n}\r\n\r\nconst LoginProvider = ({ children }) => {\r\n  const [name, setUsername] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userID, setUserID] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  \r\n  const authenticateUser = useCallback(async (email, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/v1/user/login', {email, password});\r\n      if (response.status === 200) {\r\n        const Userid = response.data.id \r\n        if(isNaN(Userid)){\r\n          console.log(\"error with getting session ID\")\r\n          navigate('/')\r\n          \r\n        }\r\n        else {\r\n          setUserID(Userid);\r\n          setEmail(email);\r\n          setUsername(response.data.name);\r\n          setSurname(response.data.surname)\r\n          setIsLoggedIn(true)\r\n        }\r\n        sessionStorage.setItem('userID', Userid);\r\n        sessionStorage.setItem('email', email);\r\n        sessionStorage.setItem('name', response.data.name);\r\n        sessionStorage.setItem('surname', response.data.surname);\r\n        sessionStorage.setItem('isLoggedIn', 'true');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } console.log(userID);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n      const storedUserID = sessionStorage.getItem('userID');\r\n      const storedEmail = sessionStorage.getItem('email');\r\n      const storedName = sessionStorage.getItem('name');\r\n      const storedSurname = sessionStorage.getItem('surname');\r\n      const storedIsLoggedIn = sessionStorage.getItem('isLoggedIn');\r\n\r\n        if (storedIsLoggedIn === 'true') {\r\n            setUserID(storedUserID);\r\n            setEmail(storedEmail);\r\n            setUsername(storedName);\r\n            setSurname(storedSurname);\r\n            setIsLoggedIn(true);\r\n        }\r\n  }, []);\r\n\r\n\r\n  const registerUser = useCallback(async (name, surname, password, email) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/v1/user/register', { name, password, email, surname });\r\n      if (response.status === 200) {\r\n        setUsername(name);\r\n        setSurname(surname)\r\n        setPassword(password);\r\n        setEmail(email);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <LoginContext.Provider value={{ name, email, surname, userID,  authenticateUser, LogOut, registerUser, isLoggedIn, setIsLoggedIn }}>\r\n      {children}\r\n    </LoginContext.Provider>\r\n  );\r\n};\r\n\r\nexport { LoginProvider, LoginContext, LogOut };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}